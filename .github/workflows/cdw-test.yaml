name: cdw-test

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    types: [ opened, synchronize, ready_for_review, reopened ]
    # Do not run when a pull request only contains changes to these files
    paths-ignore:
      - ".github/CODEOWNERS"
      - ".github/PULL_REQUEST_TEMPLATE.md"
      - "LICENSE"

  push:
    branches:
      - main
    # Do not run when a pull request only contains changes to these files
    paths-ignore:
      - ".github/CODEOWNERS"
      - ".github/PULL_REQUEST_TEMPLATE.md"
      - "LICENSE"

concurrency:
  # New commit on branch cancels running workflows of the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cdw-test:
    if: github.repository_owner == 'cdwlabs'
    runs-on:
      group: managed-services-apps-team
      labels:
        - self-hosted
        - Linux
        - x64
        - ubuntu
        - 24.04

    steps:
      - name: Prepare Credentials
        id: credentials
        run: |
          echo "::add-mask::$GH_PAT"
          echo "::add-mask::$RT_USERNAME"
          echo "::add-mask::$RT_PASSWORD"
          {
            echo "cdw_pat=$GH_PAT"
            echo "rt_username=$RT_USERNAME"
            echo "rt_password=$RT_PASSWORD"
          } >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.credentials.outputs.cdw_pat }}

      - name: Clone cdwlabs/managed-actions in a sub-directory
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.credentials.outputs.cdw_pat }}
          repository: cdwlabs/managed-actions
          ref: main
          path: ./.github/actions/cdwlabs-managed-actions

      - name: Use action from cdwlabs-managed-actions
        uses: ./.github/actions/cdwlabs-managed-actions/setup-go-semver

#      - name: Create k8s Kind Cluster
#        uses: helm/kind-action@v1.10.0

      - name: Prepare
        id: prep
        run: |
          ./scripts/install-devbox.sh
          eval "$(devbox shellenv --install --init-hook)"  # install devbox packages & execute init hooks
          echo "$DEVBOX_PACKAGES_DIR/bin" >> "$GITHUB_PATH"  # add devbox's path to PATH

      - name: Initialize kind cluster
        run: |
          eval "$(devbox shellenv --init-hook)"  # we need this for anything defined in init_hook
          task cluster:up

      - name: Verify CDW policies
        run: |
          eval "$(devbox shellenv --init-hook)"  # we need this for anything defined in init_hook
          task policy:verify:kustomize  # note: kyverno chainsaw tests are broken 'till we get kind running 
